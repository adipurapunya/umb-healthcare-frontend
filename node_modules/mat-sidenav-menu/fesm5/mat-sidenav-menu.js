import { Component, Input, ContentChildren, NgModule } from '@angular/core';
import { Router, ActivatedRoute, NavigationEnd } from '@angular/router';
import { MatButtonModule, MatExpansionModule, MatIconModule, MatRippleModule, MatToolbarModule } from '@angular/material';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SideNavItemComponent = /** @class */ (function () {
    function SideNavItemComponent(router) {
        this.router = router;
    }
    /**
     * @return {?}
     */
    SideNavItemComponent.prototype.navigate = /**
     * @return {?}
     */
    function () {
        if (!this.disabled) {
            this.router.navigate([this.route]);
        }
    };
    /**
     * @param {?} path
     * @return {?}
     */
    SideNavItemComponent.prototype.activatePath = /**
     * @param {?} path
     * @return {?}
     */
    function (path) {
        if (path === this.route) {
            this.active = true;
        }
        else {
            this.active = false;
        }
    };
    SideNavItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'side-nav-item',
                    template: "<li>\n                  <a class=\"side-nav-item\" matRipple\n                    [ngClass]=\"{'side-nav-item-active': active,'side-nav-item-disabled': disabled}\"\n                    (click)=\"navigate()\">\n                        <mat-icon *ngIf=\"icon\" style=\"margin-right:10px;vertical-align:middle\">{{ icon }}</mat-icon>\n                        <span style=\"vertical-align:middle\">{{ title }}</span>\n                  </a>\n               </li>",
                    styles: [
                        ".side-nav-item {\n          list-style-type: none;\n          box-sizing: border-box;\n          display: block;\n          font-size: 14px;\n          font-weight: 400;\n          line-height: 47px;\n          text-decoration: none;\n          transition: all .3s;\n          padding: 0 16px;\n          position: relative;\n          cursor: pointer;\n        }"
                    ]
                },] },
    ];
    /** @nocollapse */
    SideNavItemComponent.ctorParameters = function () { return [
        { type: Router, },
    ]; };
    SideNavItemComponent.propDecorators = {
        "title": [{ type: Input, args: ['title',] },],
        "icon": [{ type: Input, args: ['icon',] },],
        "route": [{ type: Input, args: ['route',] },],
        "disabled": [{ type: Input, args: ['disabled',] },],
    };
    return SideNavItemComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var MatSidenavMenuComponent = /** @class */ (function () {
    function MatSidenavMenuComponent(router, aroute) {
        var _this = this;
        this.router = router;
        this.aroute = aroute;
        // console.log('router:', this.router);
        this.router.events.subscribe(function (e) {
            // console.log('url:', this.router.url);
            // console.log('router state:', this.router.routerState);
            // if (this.router.routerState.root.children.length > 0 ) {
            if (e instanceof NavigationEnd) {
                // console.log('component:', '(' + Date.now + ')' + this.router.routerState.root.children[0].component);
                // console.log('path: ' + this.getPath());
                // console.log('component:', '(' + Date.now + ')' + this.router.routerState.root.children[0].component);
                // console.log('path: ' + this.getPath());
                _this.items.forEach(function (i) {
                    i.activatePath(_this.getPath());
                });
                _this.sidenav.close();
            }
            // console.log('path:', this.erouterState);
        });
        // this.aroute.url.subscribe( (u) => {
        //   console.log('active route:', u);
        // });
    }
    /**
     * @return {?}
     */
    MatSidenavMenuComponent.prototype.getPath = /**
     * @return {?}
     */
    function () {
        var /** @type {?} */ path = this.router.routerState.snapshot.url;
        return path;
    };
    MatSidenavMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'side-nav-menu',
                    template: "\n      <nav style=\"height:100%\">\n        <mat-toolbar color=\"primary\">\n          <button mat-icon-button (click)=\"sidenav.close()\"><mat-icon>keyboard_arrow_left</mat-icon></button>&nbsp;\n          <span>{{ title }}</span>\n        </mat-toolbar>\n\n        <ul class=\"side-nav-menu\">\n          <ng-content></ng-content>\n        </ul>\n      </nav>",
                    styles: [
                        ".side-nav-menu {\n          list-style-type: none;\n          padding: 0\n      }"
                    ]
                },] },
    ];
    /** @nocollapse */
    MatSidenavMenuComponent.ctorParameters = function () { return [
        { type: Router, },
        { type: ActivatedRoute, },
    ]; };
    MatSidenavMenuComponent.propDecorators = {
        "sidenav": [{ type: Input },],
        "title": [{ type: Input },],
        "items": [{ type: ContentChildren, args: [SideNavItemComponent, { descendants: true },] },],
    };
    return MatSidenavMenuComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SideNavGroupComponent = /** @class */ (function () {
    function SideNavGroupComponent() {
    }
    SideNavGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'side-nav-group',
                    template: "<div class=\"side-nav-group\">\n        <div *ngIf=\"title\" class=\"side-nav-group-title\">\n          <span style=\"padding: 0 16px;\">{{ title }}</span>\n        </div>\n        <ng-content></ng-content>\n    </div>",
                    styles: [".side-nav-group{border-width:1px 0;border-style:solid}.side-nav-group-title{width:100%}"]
                },] },
    ];
    /** @nocollapse */
    SideNavGroupComponent.propDecorators = {
        "title": [{ type: Input, args: ['title',] },],
    };
    return SideNavGroupComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var SideNavExpansionGroupComponent = /** @class */ (function () {
    function SideNavExpansionGroupComponent() {
    }
    SideNavExpansionGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'side-nav-x-group',
                    template: "<mat-expansion-panel [hideToggle]=\"hideToggle\">\n        <mat-expansion-panel-header *ngIf=\"title\">{{ title }}</mat-expansion-panel-header>\n        <ng-content></ng-content>\n    </mat-expansion-panel>",
                    styles: ["\n    div.mat-expansion-panel-body {\n      padding-right: 0px;\n      padding-left: 0px;\n    }\n  "]
                },] },
    ];
    /** @nocollapse */
    SideNavExpansionGroupComponent.propDecorators = {
        "title": [{ type: Input, args: ['title',] },],
        "hideToggle": [{ type: Input, args: ['hideToggle',] },],
    };
    return SideNavExpansionGroupComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var MatSidenavMenuModule = /** @class */ (function () {
    function MatSidenavMenuModule() {
    }
    MatSidenavMenuModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        SideNavExpansionGroupComponent, SideNavGroupComponent, MatSidenavMenuComponent, SideNavItemComponent,
                    ],
                    imports: [
                        BrowserModule, BrowserAnimationsModule,
                        MatButtonModule, MatExpansionModule, MatIconModule, MatToolbarModule, MatRippleModule
                    ],
                    exports: [
                        MatExpansionModule,
                        SideNavExpansionGroupComponent, SideNavGroupComponent, SideNavItemComponent, MatSidenavMenuComponent
                    ]
                },] },
    ];
    return MatSidenavMenuModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MatSidenavMenuComponent, MatSidenavMenuModule, SideNavExpansionGroupComponent as ɵb, SideNavGroupComponent as ɵc, SideNavItemComponent as ɵa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,