import { SnotifyToastConfig, SnotifyService } from 'ng-snotify';
export interface NgxAlertsNotification extends SnotifyToastConfig {
    body: string;
    title?: string;
}
export declare class NgxAlertsService {
    private notifyService;
    constructor(notifyService: SnotifyService);
    private defaultNotify(type, config);
    notifySimple(config: NgxAlertsNotification): void;
    notifySuccess(config: NgxAlertsNotification): void;
    notifyInfo(config: NgxAlertsNotification): void;
    notifyWarning(config: NgxAlertsNotification): void;
    notifyError(config: NgxAlertsNotification): void;
    notifyPrompt(config: NgxAlertsNotification): void;
    notifyConfirm(config: NgxAlertsNotification): void;
    notifyDismiss(toastId: any): void;
    alert(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
    alertSuccess(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
    alertWarning(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
    alertError(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
    alertInfo(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
    alertQuestion(options?: any, successCb?: (...args: any[]) => void, closeCb?: (...args: any[]) => void): Promise<void>;
}
